# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "thunderbolt"
    "usb_storage"
    "usbhid"
    "sd_mod"
  ];
  boot.kernelModules = [ "kvm-amd" ];

  boot.initrd.luks.devices = {
    "luks-3280a0ec-a3a7-4930-a54c-97dbc6cfd5dc".device =
      "/dev/disk/by-uuid/3280a0ec-a3a7-4930-a54c-97dbc6cfd5dc";

    "luks-8e5da6b5-dacf-4ca1-b0ff-afa75d8ea241".device =
      "/dev/disk/by-uuid/8e5da6b5-dacf-4ca1-b0ff-afa75d8ea241";
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/2465ca44-41dd-4dca-89d4-b31946f28082";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F3D0-C329";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/3df9b03d-3224-4c2f-9962-f8cbc1c5e0a1"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
